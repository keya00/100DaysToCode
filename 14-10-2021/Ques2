#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
    map<int, int> ht;
    vector<int> ans;
    for (int i = 0; i < nums1.size(); i ++) {
        ht[nums1[i]] = 0;
    }
    for (int i = 0; i < nums2.size(); i ++) {
        if (ht.find(nums2[i]) != ht.end())
            ht[nums2[i]] = 1;
    }
    for (map<int, int>::iterator mit = ht.begin(); 
        mit != ht.end(); mit ++) {
        if (mit->second == 1)
            ans.push_back(mit->first);
    }
    return ans;
}

int main() {
    vector<int> nums1 = {1,2,2,1};
    vector<int> nums2 = {2,2};
    vector<int> res = intersection(nums1, nums2);
    for (int i = 0; i < res.size(); i ++) 
        cout << res[i] << " " << endl;
    return 0;
}
